function test_integration()
%-------------------------------------------------------------%
%   Program written using GNU Octave, compatable with MATLAB  %
%   James Vrionis                                             %
%   test_integration.m                                        %
%                                                             %
%-------------------------------------------------------------%

%-------------------------------------------------------------%
x = linspace(-3,1,10000);
f = @(x)((1./(1+x.^2)).*(cos((3/2)*exp(-(x.^2)))))-(x.^3/30);
y = f(x);
%-------------------------------------------------------------%

%-------------------------------------------------------------%
figure (1)
plot(x,y,'g--')
hold on
%-------------------------------------------------------------%

%-------------------------------------------------------------%
a = -3;
b = 1;
I1 = zeros(9999,1);
for i = 2:10000;
    [I1(i-1)] = int_midpoint_rule(f,a,b,i);
end
%-------------------------------------------------------------%

%-------------------------------------------------------------%
I2 = zeros(9999,1);
for i = 2:10000;
    [I2(i-1)] = int_trapezoidal_rule(f,a,b,i);
end
%-------------------------------------------------------------%

%-------------------------------------------------------------%
I3 = zeros(9999,1);
for i = 2:10000;
    [I3(i-1)] = int_Simpson_rule(f,a,b,i);
end
%-------------------------------------------------------------%

%-------------------------------------------------------------%
I = 1.6851344770467;

err1 = abs(I-I1);
err2 = abs(I-I2);
err3 = abs(I-I3);
%-------------------------------------------------------------%

%-------------------------------------------------------------%
figure(2)
clf 
for l=1:9999
    
loglog(l,err1,'b')
hold on
%-------------------------------------------------------------%

%-------------------------------------------------------------%
loglog(l,err2,'r')
hold on
%-------------------------------------------------------------%

%-------------------------------------------------------------%
loglog(l,err3,'k')
hold on

end
%-------------------------------------------------------------%
